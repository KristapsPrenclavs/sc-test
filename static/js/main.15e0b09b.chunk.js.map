{"version":3,"sources":["Slides/Slides.js","Arrows/Arrows.js","JumpTo/JumpTo.js","ViewCount/ViewCount.js","App.js","index.js"],"names":["Slides","props","showSlides","i","currentSlide","count","push","slides","className","map","slide","Arrows","onClick","setCurrentSlide","JumpTo","type","placeholder","onChange","e","handleJump","target","value","ViewCount","setCount","App","useState","Array","from","length","key","x","touchStartLocation","swipe","setSwiped","handleNewCount","newCount","handleCurrentSlides","newSlide","onTouchStart","location","touches","clientX","onTouchEnd","changedTouches","differences","console","log","jump","jumpTo","j","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15e0b09b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Slides.css\";\r\n\r\nexport const Slides = (props) => {\r\n  const showSlides = [];\r\n\r\n  for (let i = props.currentSlide; i < props.count + props.currentSlide; i++) {\r\n    showSlides.push(props.slides[i]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"slides\">\r\n      {showSlides.map((slide) => {\r\n        return (\r\n          <section className=\"slide\" key={slide}>\r\n            {slide}\r\n          </section>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Arrows.css\";\r\n\r\nexport const Arrows = (props) => {\r\n  const handleNext = () => {\r\n    props.setCurrentSlide(props.currentSlide + 1);\r\n  };\r\n  const handlePrev = () => {\r\n    props.setCurrentSlide(props.currentSlide - 1);\r\n  };\r\n  return (\r\n    <div className=\"arrows\">\r\n      <span className=\"arrow-prev\" onClick={() => handlePrev()}>\r\n        prev\r\n      </span>\r\n      <span className=\"arrow-next\" onClick={() => handleNext()}>\r\n        next\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./JumpTo.css\";\r\n\r\nexport const JumpTo = (props) => {\r\n  const handleJump = (e) => {\r\n    props.handleJump(e);\r\n  };\r\n  return (\r\n    <div className=\"jump-to\">\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Go to slide\"\r\n        onChange={(e) => handleJump(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./ViewCount.css\";\r\n\r\nexport const ViewCount = (props) => {\r\n  const increaseSlides = () => {\r\n    props.setCount(props.count + 1);\r\n  };\r\n  const decreaseSlides = () => {\r\n    props.setCount(props.count - 1);\r\n  };\r\n  return (\r\n    <div className=\"plus-minus\">\r\n      <button className=\"decrease\" onClick={() => decreaseSlides()}>\r\n        -\r\n      </button>\r\n      <button className=\"increase\" onClick={() => increaseSlides()}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Slides } from \"./Slides/Slides\";\r\nimport { Arrows } from \"./Arrows/Arrows\";\r\nimport { JumpTo } from \"./JumpTo/JumpTo\";\r\nimport { ViewCount } from \"./ViewCount/ViewCount\";\r\nimport \"./index.css\";\r\n\r\nexport const App = () => {\r\n  const _SLIDECOUNT = 8;\r\n\r\n  const [slides] = useState(\r\n    Array.from({ length: _SLIDECOUNT }, (key, i) => \"Slide \" + (i + 1))\r\n  );\r\n  const [count, setCount] = useState(1);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [swipe, setSwiped] = useState({\r\n    x: 50,\r\n    touchStartLocation: {\r\n      x: null,\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Registers users first touch coordinates and saves them in state\r\n   * @param e event when user first touches screen\r\n   */\r\n  const onTouchStart = (e) => {\r\n    const firstTouchEvent = e.touches[0];\r\n\r\n    const location = {\r\n      x: firstTouchEvent.clientX,\r\n    };\r\n    setSwiped({ x: 50, touchStartLocation: location });\r\n  };\r\n\r\n  /**\r\n   * Registers when users finger leaves screen and saves difference from start point in state\r\n   * @param e event when user lifts his finger\r\n   */\r\n  const onTouchEnd = (e) => {\r\n    const firstTouchEvent = e.changedTouches[0];\r\n    const location = {\r\n      x: firstTouchEvent.clientX,\r\n    };\r\n    const differences = {\r\n      x: swipe.touchStartLocation.x - location.x,\r\n    };\r\n    console.log(differences);\r\n    const newPosition = {\r\n      x: swipe.x + -1 * differences.x * 0.05,\r\n    };\r\n\r\n    if (differences.x > 200) {\r\n      handleCurrentSlides(currentSlide + 1);\r\n    }\r\n    if (differences.x < -200) {\r\n      handleCurrentSlides(currentSlide - 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets state with increased or decreased count value to show more or less slides\r\n   * @param newCount new count value\r\n   */\r\n  const handleNewCount = (newCount) => {\r\n    if (newCount <= slides.length && newCount > 0) {\r\n      if (currentSlide + count < slides.length) {\r\n        setCount(newCount);\r\n      } else if (newCount < count) {\r\n        setCount(newCount);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Shows next or previous slide based param recieved\r\n   * @param newSlide new slide value\r\n   */\r\n  const handleCurrentSlides = (newSlide) => {\r\n    if (newSlide <= slides.length - 1 && newSlide >= 0) {\r\n      if (newSlide + count < slides.length + 1) {\r\n        setCurrentSlide(newSlide);\r\n      }\r\n    }\r\n\r\n    if (currentSlide === 0 && newSlide === currentSlide - 1) {\r\n      setCount(1);\r\n      setCurrentSlide(slides.length - 1);\r\n    }\r\n\r\n    if (\r\n      currentSlide + count === slides.length &&\r\n      newSlide === currentSlide + 1\r\n    ) {\r\n      setCount(1);\r\n      setCurrentSlide(0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets state with new slide number to show\r\n   * @param jumpTo number recieved from JumpTo component\r\n   */\r\n  const handleJump = (jumpTo) => {\r\n    const j = parseInt(jumpTo);\r\n    if (j >= 1 && j <= slides.length) {\r\n      setCount(1);\r\n      setCurrentSlide(j - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"carousel\"\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={onTouchEnd}\r\n      >\r\n        <Slides currentSlide={currentSlide} count={count} slides={slides} />\r\n        <Arrows\r\n          currentSlide={currentSlide}\r\n          setCurrentSlide={(newSlide) => handleCurrentSlides(newSlide)}\r\n        />\r\n      </div>\r\n      <ViewCount\r\n        count={count}\r\n        setCount={(newCount) => handleNewCount(newCount)}\r\n      />\r\n      <JumpTo slides={slides} handleJump={(jump) => handleJump(jump)} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}